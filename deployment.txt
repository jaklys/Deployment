import socket
from concurrent.futures import ThreadPoolExecutor
import subprocess

def scan_port(host, port):
    """Attempt to connect to a specific port on a host."""
    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
        s.settimeout(1)
        try:
            s.connect((host, port))
            return port, True
        except:
            return port, False

def scan_ports(host, port_range):
    """Scan a range of ports on a given host."""
    open_ports = []
    with ThreadPoolExecutor(max_workers=100) as executor:
        futures = [executor.submit(scan_port, host, port) for port in range(port_range[0], port_range[1] + 1)]
        for future in futures:
            port, is_open = future.result()
            if is_open:
                open_ports.append(port)
    return open_ports

def send_curl_request(host, port):
    """Send a curl request to the specified port."""
    url = f"http://{host}:{port}"
    try:
        response = subprocess.run(["curl", "-s", "-o", "/dev/null", "-w", "%{http_code}", url], capture_output=True, text=True, timeout=5)
        return response.stdout.strip()
    except subprocess.TimeoutExpired:
        return "Timeout"
    except Exception as e:
        return str(e)

if __name__ == "__main__":
    host = input("Zadejte adresu hosta (např. 192.168.1.1 nebo example.com): ")
    port_start = int(input("Zadejte počáteční port: "))
    port_end = int(input("Zadejte koncový port: "))

    port_range = (port_start, port_end)
    print(f"Skenuji porty od {port_start} do {port_end} na hostiteli {host}...")

    open_ports = scan_ports(host, port_range)
    
    if open_ports:
        results = []
        for port in open_ports:
            print(f"Posílám curl požadavek na port {port}...")
            response = send_curl_request(host, port)
            results.append((port, response))

        # Vytisknout výsledky v přehledném formátu
        print("\nVýsledky skenování portů:")
        print(f"{'Port':<10}{'HTTP Status':<15}")
        print("-" * 25)
        for port, response in results:
            print(f"{port:<10}{response:<15}")
    else:
        print(f"Žádné otevřené porty nebyly nalezeny na hostiteli {host} v rozsahu {port_range[0]}-{port_range[1]}.")