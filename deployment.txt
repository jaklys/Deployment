document.addEventListener('DOMContentLoaded', function() {
    const searchInput = document.getElementById('searchInput');
    
    searchInput.addEventListener('input', function() {
        const searchValue = this.value;
        try {
            const regex = new RegExp(searchValue, 'i'); // 'i' pro case-insensitive hledání
            const tableRows = document.querySelectorAll('#myTable tr');
            
            tableRows.forEach(row => {
                // Předpokládáme, že každý řádek má několik buněk s textem
                const cellsText = Array.from(row.cells).map(cell => cell.textContent).join(' ');
                if (regex.test(cellsText)) {
                    row.style.display = ''; // Řádek odpovídá výrazu, zobrazíme ho
                } else {
                    row.style.display = 'none'; // Řádek neodpovídá výrazu, skryjeme ho
                }
            });
        } catch(e) {
            console.error('Chybný regulární výraz:', e);
            // Zde můžete přidat logiku pro ošetření chybného výrazu, např. zobrazení všech řádků
        }
    });
});

document.addEventListener('DOMContentLoaded', function() {
    const searchInput = document.getElementById('searchInput');
    const errorMessage = document.getElementById('errorMessage');
    
    searchInput.addEventListener('input', function() {
        const searchValue = this.value;
        errorMessage.style.display = 'none'; // Skrytí chybové zprávy při novém vstupu

        try {
            const regex = new RegExp(searchValue, 'i');
            
            // Zde by pokračoval váš kód pro vyhledávání pomocí regexu
        } catch(e) {
            errorMessage.textContent = 'Zadaný výraz není validní regulární výraz.';
            errorMessage.style.display = ''; // Zobrazení chybové zprávy
        }
    });
});

# Define the path to the folder from which files will be copied
# This script is assumed to be run from the location Root repository/NodeRunnerWeb
$sourceFolder = Join-Path -Path $PSScriptRoot -ChildPath "NodeRunnerWebNew"

# List of paths to remote folders where files will be copied
$destinationFolders = @(
    "\\RemotePC1\SharedFolder",
    "\\RemotePC2\SharedFolder",
    "\\RemotePC3\SharedFolder"
)

# Iterate through all remote folders and copy files into them
foreach ($destFolder in $destinationFolders) {
    # Check if the target folder exists
    if (Test-Path $destFolder) {
        # Copying files with the -Force switch to overwrite existing files
        Copy-Item -Path "$sourceFolder\*" -Destination $destFolder -Recurse -Force
        Write-Host "Files have been successfully copied to $destFolder."
    } else {
        Write-Host "The target folder $destFolder was not found."
    }
}