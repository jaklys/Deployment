Zde jsou jen d칤l캜칤 zm캩ny:
1. Z칤sk치n칤 p콢vodn칤ho autora a jeho GitLab ID:
bash# Za 콏치dek "echo "Commit author: $CI_COMMIT_AUTHOR"" p콏idejte:

# Get the actual user who triggered this cascade
ORIGINAL_AUTHOR_EMAIL=$(git log -1 --pretty=format:'%ae' $CI_COMMIT_SHA)
ORIGINAL_AUTHOR_NAME=$(git log -1 --pretty=format:'%an' $CI_COMMIT_SHA)
echo "Original author: $ORIGINAL_AUTHOR_NAME <$ORIGINAL_AUTHOR_EMAIL>"

# Try to find GitLab user ID for the author
AUTHOR_USER_ID=""
if [ -n "$PROJECT_ACCESS_TOKEN" ]; then
  echo "Looking up GitLab user ID for assignee..."
  USER_SEARCH=$(curl --silent --header "Authorization: Bearer ${PROJECT_ACCESS_TOKEN}" \
    "https://${GITLAB_URL}/api/v4/users?search=${ORIGINAL_AUTHOR_EMAIL}" 2>/dev/null || echo "[]")
  
  AUTHOR_USER_ID=$(echo "$USER_SEARCH" | jq -r '.[0].id // empty' 2>/dev/null || echo "")
  
  if [ -n "$AUTHOR_USER_ID" ]; then
    echo "Found GitLab user ID: $AUTHOR_USER_ID"
  else
    echo "Could not find GitLab user ID for $ORIGINAL_AUTHOR_EMAIL"
  fi
fi
2. P콏id치n칤 prom캩nn칠 pro ukl치d치n칤 MR detail콢:
bash# K ostatn칤m tracking variables p콏idejte:
- MR_DETAILS=""  # Store MR details for final summary
3. V 캜치sti kde vytv치콏칤te MR_PAYLOAD, p콏idejte podm칤nku pro assignee:
bash# Nahra캞te celou 캜치st MR_PAYLOAD= za:
if [ -n "$AUTHOR_USER_ID" ]; then
  # S assignee
  MR_PAYLOAD=$(jq -n \
    --arg source "$MERGE_BRANCH" \
    --arg target "$TARGET" \
    --arg title "[Auto] Cascade merge from $CURRENT_BRANCH to $TARGET" \
    --arg desc "$MR_DESCRIPTION" \
    --arg assignee "$AUTHOR_USER_ID" \
    '{
      source_branch: $source,
      target_branch: $target,
      title: $title,
      description: $desc,
      remove_source_branch: true,
      labels: ["auto-cascade", "merge-conflict"],
      assignee_id: ($assignee | tonumber)
    }')
else
  # Bez assignee (p콢vodn칤 k칩d)
  MR_PAYLOAD=$(jq -n \
    --arg source "$MERGE_BRANCH" \
    --arg target "$TARGET" \
    --arg title "[Auto] Cascade merge from $CURRENT_BRANCH to $TARGET" \
    --arg desc "$MR_DESCRIPTION" \
    '{
      source_branch: $source,
      target_branch: $target,
      title: $title,
      description: $desc,
      remove_source_branch: true,
      labels: ["auto-cascade", "merge-conflict"]
    }')
fi
4. P콏i 칰sp캩코n칠m vytvo콏en칤 MR p콏idejte ukl치d치n칤 detail콢:
bash# Za 콏치dek "echo "  URL: $MR_URL"" p콏idejte:

# Store details for final summary
MR_DETAILS="${MR_DETAILS}!${MR_IID} - ${TARGET} - ${MR_URL}\n"

# If we have author, show assignment
if [ -n "$AUTHOR_USER_ID" ]; then
  echo "  Assigned to: $ORIGINAL_AUTHOR_NAME"
fi
5. Nahra캞te celou sekci v칳pisu MR na konci:
bashif [ -n "$CREATED_MRS" ]; then
  echo ""
  echo "游늶 Created MRs for conflict resolution:"
  echo "These MRs have been assigned to: ${ORIGINAL_AUTHOR_NAME:-Unknown}"
  echo ""
  echo -e "$MR_DETAILS" | while IFS= read -r line; do
    [ -n "$line" ] && echo "  $line"
  done
  echo ""
  echo "The original author should resolve conflicts in these MRs."
fi